<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx.xsd">
<!-- 引入外部配置文件 
    此处路径可能有错
-->
<context:property-placeholder location="classpath:jdbc.properties"/>
<!-- 配置c3p0连接池 -->
<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <property name="driverClass" value="${jdbc.driverClass}"/>
    <property name="jdbcUrl" value="${jdbc.url}"/>
    <property name="user" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <!-- 每300秒检查所有连接池中的空闲连接 -->
        <property name="idleConnectionTestPeriod" value="300"></property>
        <!-- 最大空闲时间,900秒内未使用则连接被丢弃。若为0则永不丢弃 -->
        <property name="maxIdleTime" value="900"></property>
        <!-- 最大连接数 -->
        <property name="maxPoolSize" value="2"></property>
    
</bean>

<!-- 配置hibernate相关属性 
    也可以使用hibernate.cfg.xml配置文件进行配置
-->
<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
    <!-- 注入连接池 -->
    <property name="dataSource" ref="dataSource"/>
    <!-- 配置hibernate属性 -->
    <property name="hibernateProperties">
        <props>
        <!-- 配置方言为mysql方言 -->
            <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
            <!-- 打印sql语句 -->
            <prop key="hibernate.show_sql">true</prop>
            <prop key="hibernate.format_sql">true</prop>
            <prop key="hibernate.hbm2ddl.auto">update</prop>
        </props>
    </property>
     
    <property name="mappingResources">
    <!-- 对象为多个，使用list -->
        <list>
        <!-- 这里的路径是相对于src/下的路径 -->
            <value>com/my/entity/Employee.hbm.xml</value>
            <value>com/my/entity/Department.hbm.xml</value>
            
        </list>
    </property>
</bean>
<!-- 配置hibernate事务管理 -->
<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>

<!-- 开启注解事务 -->
<tx:annotation-driven transaction-manager="transactionManager"/>
<!-- 配置注入Action bean 这时Action类交由spring进行管理   
 -->
<bean id="employeeAction" class="com.my.action.EmployeeAction" scope="prototype">
    <property name="employeeService" ref="employeeService"></property>
     <property name="departmentService" ref="departmentService"></property>
</bean>

<!-- 配置注入employeeService bean -->
<bean id="employeeService" class="com.my.service.EmployeeServiceImpl">
    <property name="employeeDao" ref="employeeDao"></property>
</bean>

<!-- 配置注入employeeDao bean -->
<bean id="employeeDao" class="com.my.dao.EmployeeDaoImpl">
   <!-- 注入sessionFactory，这样就可以使用hibernate框架操作数据库 -->
    <property name="sessionFactory" ref="sessionFactory"></property>
</bean>

<!-- 配置注入Action bean 这时Action类交由spring进行管理   
 -->
<bean id="departmentAction" class="com.my.action.DepartmentAction" scope="prototype">
    <property name="departmentService" ref="departmentService"></property>
</bean>

<!-- 配置注入departmentService bean -->
<bean id="departmentService" class="com.my.service.DepartmentServiceImpl">
    <property name="departmentDao" ref="departmentDao"></property>
</bean>

<!-- 配置注入departmentDao bean -->
<bean id="departmentDao" class="com.my.dao.DepartmentDaoImpl">
   <!-- 注入sessionFactory，这样就可以使用hibernate框架操作数据库 -->
    <property name="sessionFactory" ref="sessionFactory"></property>
</bean>

</beans>